{"ast":null,"code":"import { productsState } from \"../products/state\";\nimport { cart } from \"./state\";\nimport { NEW_CART } from \"./type\";\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NEW_CART:\n      let x = state.arr.find(e => e.user_id == action.value.user_id && e.product_id == action.value.product_id);\n\n      if (x) {\n        let prod = productsState.products.find(e => e.id == x.product_id);\n\n        if (prod.count > x.quantitiy) {\n          x.quantitiy++;\n        }\n      } else {\n        state.arr.push({ ...action.value,\n          id: Date.now(),\n          quantitiy: 1\n        });\n      }\n\n      break;\n\n    case 'plus':\n      let x1 = state.arr.find(e => e.user_id == action.value.user_id && e.product_id == action.value.product_id);\n\n      if (x1) {\n        let prod = productsState.products.find(e => e.id == x.product_id);\n\n        if (prod.count > x.quantitiy) {\n          x.quantitiy++;\n        }\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  return { ...state\n  };\n};","map":{"version":3,"names":["productsState","cart","NEW_CART","cartReducer","state","action","type","x","arr","find","e","user_id","value","product_id","prod","products","id","count","quantitiy","push","Date","now","x1"],"sources":["C:/Users/user/Desktop/online-shop-react/src/store/tocart/reducer.js"],"sourcesContent":["import { productsState } from \"../products/state\";\r\nimport { cart } from \"./state\";\r\nimport { NEW_CART } from \"./type\";\r\n\r\nexport const cartReducer = (state = cart, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_CART:\r\n            let x = state.arr.find(e => e.user_id == action.value.user_id && e.product_id == action.value.product_id)\r\n            if (x) {\r\n                let prod = productsState.products.find(e => e.id == x.product_id);\r\n                if (prod.count > x.quantitiy) {\r\n                    x.quantitiy++\r\n                }\r\n            } else {\r\n                state.arr.push({ ...action.value, id: Date.now(), quantitiy: 1 })\r\n            }\r\n            break;\r\n            case 'plus':\r\n                let x1 = state.arr.find(e => e.user_id == action.value.user_id && e.product_id == action.value.product_id)\r\n                if (x1) {\r\n                    let prod = productsState.products.find(e => e.id == x.product_id);\r\n                    if (prod.count > x.quantitiy) {\r\n                        x.quantitiy++\r\n                    }\r\n                }\r\n            break;\r\n        default:\r\n            break\r\n    }\r\n\r\n\r\n    return { ...state }\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAO,MAAMC,WAAW,GAAG,YAA0B;EAAA,IAAzBC,KAAyB,uEAAjBH,IAAiB;EAAA,IAAXI,MAAW;;EACjD,QAAQA,MAAM,CAACC,IAAf;IAEI,KAAKJ,QAAL;MACI,IAAIK,CAAC,GAAGH,KAAK,CAACI,GAAN,CAAUC,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACC,OAAF,IAAaN,MAAM,CAACO,KAAP,CAAaD,OAA1B,IAAqCD,CAAC,CAACG,UAAF,IAAgBR,MAAM,CAACO,KAAP,CAAaC,UAAtF,CAAR;;MACA,IAAIN,CAAJ,EAAO;QACH,IAAIO,IAAI,GAAGd,aAAa,CAACe,QAAd,CAAuBN,IAAvB,CAA4BC,CAAC,IAAIA,CAAC,CAACM,EAAF,IAAQT,CAAC,CAACM,UAA3C,CAAX;;QACA,IAAIC,IAAI,CAACG,KAAL,GAAaV,CAAC,CAACW,SAAnB,EAA8B;UAC1BX,CAAC,CAACW,SAAF;QACH;MACJ,CALD,MAKO;QACHd,KAAK,CAACI,GAAN,CAAUW,IAAV,CAAe,EAAE,GAAGd,MAAM,CAACO,KAAZ;UAAmBI,EAAE,EAAEI,IAAI,CAACC,GAAL,EAAvB;UAAmCH,SAAS,EAAE;QAA9C,CAAf;MACH;;MACD;;IACA,KAAK,MAAL;MACI,IAAII,EAAE,GAAGlB,KAAK,CAACI,GAAN,CAAUC,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACC,OAAF,IAAaN,MAAM,CAACO,KAAP,CAAaD,OAA1B,IAAqCD,CAAC,CAACG,UAAF,IAAgBR,MAAM,CAACO,KAAP,CAAaC,UAAtF,CAAT;;MACA,IAAIS,EAAJ,EAAQ;QACJ,IAAIR,IAAI,GAAGd,aAAa,CAACe,QAAd,CAAuBN,IAAvB,CAA4BC,CAAC,IAAIA,CAAC,CAACM,EAAF,IAAQT,CAAC,CAACM,UAA3C,CAAX;;QACA,IAAIC,IAAI,CAACG,KAAL,GAAaV,CAAC,CAACW,SAAnB,EAA8B;UAC1BX,CAAC,CAACW,SAAF;QACH;MACJ;;MACL;;IACJ;MACI;EAvBR;;EA2BA,OAAO,EAAE,GAAGd;EAAL,CAAP;AACH,CA7BM"},"metadata":{},"sourceType":"module"}